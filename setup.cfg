[build_ext]
define=PSYCOPG_EXTENSIONS,PSYCOPG_DISPLAY_SIZE,HAVE_PQFREEMEM,HAVE_PQPROTOCOL3
# PSYCOPG_EXTENSIONS enables extensions to PEP-249 (you really want this)
# PSYCOPG_DISPLAY_SIZE enable display size calculation (a little slower)
# HAVE_PQFREEMEM should be defined on PostgreSQL >= 7.3
# HAVE_PQPROTOCOL3 should be defined on PostgreSQL >= 7.4
# PSYCOPG_DEBUG can be added to enable verbose debug information
# PSYCOPG_OWN_QUOTING can be added, but it is deprecated (will go away in 2.1)

# Set to 1 to use Python datatime objects for default date/time representation
use_pydatetime=1

# Set to 1 if you want to enable "Decimal" type on python 2.3. 
# If the "decimal" module is found in the PYTHONPATH it will be used, else
# fall back on the float type (this is disabled by default to be compatible
# with old versions of psycopg 1 and pre-beta versions of psycopg 2.)
use_decimal=0

# "include_dirs" is the preferred method for locating postgresql headers,
# but some extra checks on sys.platform will still be done in setup.py.
# The next line is the default as used on psycopg author Debian laptop:
include_dirs=.:/usr/include/postgresql:/usr/include/postgresql/server
# Uncomment next line on Mandrake 10.x (and comment previous ones):
#include_dirs=.:/usr/include/pgsql/8.0:/usr/include/pgsql/8.0/server 
# Uncomment next line on SUSE 9.3 (and comment previous ones):
#include_dirs=.:/usr/include/pgsql:/usr/include/pgsql/server

# If postgresql is installed somewhere weird (i.e., not in your runtime library
# path like /usr/lib), just add the right path in "library_dirs" any extra
# libraries required to link in "libraries".
#library_dirs=
#libraries=


# Windows-only definitions
# ------------------------

# The postgresql directory. It can be either the root of a source tree or the
# location of a binary installation
pgdir=C:\Program files\PostgreSQL\8.0
#pgdir=D:\postgresql-8.0.1

# Dynamically build against libpq.dll
use_pg_dll=0
